<!-- viewRecipe.ejs -->

<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>View Recipe</title>
  <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">

  <style>
    body {
      font-family: 'Open Sans', sans-serif;
      margin-top: 20px;
    }
    .navbar-custom {
      background-color: #fff; 
      box-shadow: 0 2px 4px rgba(0,0,0,.1);
    }
    .navbar-custom .navbar-brand {
      color: #333;
      font-weight: bold;
    }
    .navbar-custom .navbar-nav .nav-link {
      color: #333;
    }
    .navbar-custom .nav-item.active .nav-link,
    .navbar-custom .nav-item:hover .nav-link {
      color: #ffc107;
    }
    .navbar-custom .btn {
      padding: .375rem .75rem;
      margin-left: .5rem;
    }

    .hero-section {
      background: url('/background_image.jpg') no-repeat center center/cover;
      padding: 4rem 0;
      color: #fff;
    }
    .hero-section .btn {
      background: #ffc107;
      border: none;
      border-radius: 50px;
      padding: 0.5rem 1.5rem;
      font-size: 1rem;
      margin: 0 0.25rem;
    }
    .hero-section .btn:hover {
      background: #e0a800;
    }
    .hero-section .btn.search-btn {
      background: #28a745;
      color: #fff;
    }
    .hero-section .btn.search-btn:hover {
      background: #218838;
    }

    .hero-section {
      position: relative;
      z-index: 1;
    }

    .hero-section::before {
      content: '';
      display: block;
      top: 0;
      right: 0;
      bottom: 0;
      left: 0;
      background: rgba(0, 0, 0, 0.5); /* Black with 50% opacity */
      z-index: -1;
    }


    /* You should extract this to a separate CSS file in production */
    .exclusive-offer {
      background-color: #f8f9fa;
      text-align: center;
      padding: 2rem 0;
    }
    .exclusive-offer h2 {
      font-size: 1.5rem;
      margin-bottom: 1rem;
    }
    .exclusive-offer .btn {
      background: #ffc107;
      color: #fff;
      border-radius: 50px;
      padding: 0.5rem 1.5rem;
      font-size: 1rem;
      margin-top: 1rem;
    }
    .exclusive-offer .btn:hover {
      background: #ffc107;
    }

    footer {
      background-color: #333;
      color: #fff;
      text-align: center;
      padding: 1rem 0;
      margin-top: 4rem;
    }
    .recipe-cards {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
      gap: 20px;
    }
    
    .recipe-card {
      border: 1px solid #ddd;
      border-radius: 8px;
      overflow: hidden;
    }
    
    .recipe-card img {
      width: 100%;
      height: auto;
      border-bottom: 1px solid #ddd;
    }
    
    .recipe-details {
      padding: 20px;
    }
    
    .recipe-details h3 {
      margin-top: 0;
    }
    
    .recipe-details p {
      margin: 0;
    }   
    
    .recipe-details button {
      background-color: #ffc107;
      color: white;
      border: none;
      padding: 8px 16px;
      border-radius: 4px;
      cursor: pointer;
    }
    
    .recipe-details button:hover {
      background-color: #ffc107;
    }

    /* featured section */
    .featured-recipes {
      font-family: 'Open Sans', sans-serif;
      margin: 20px;
      padding-left: 15px; /* align with your site's layout */
    }

    .featured-recipes h2 {
      font-size: 1.5em;
      color: #333;
      margin-bottom: 1em;
    }

    .recipes-container {
      display: flex;
      gap: 20px;
      overflow-x: auto;
    }

    .recipe-card {
      width: 250px;
      border-radius: 10px;
      overflow: hidden;
      box-shadow: 0 2px 8px rgba(0,0,0,0.2);
      background-color: #fff;
      position: relative;
    }

    .recipe-image {
      height: 150px;
      background-size: cover;
      background-position: center;
    }

    .recipe-rating {
      position: absolute;
      top: 10px;
      left: 10px;
      background-color: #ffc107;
      color: #fff;
      border-radius: 50%;
      padding: 0.3em 0.6em;
      display: flex;
      align-items: center;
      font-size: 0.875em;
    }

    .rating-value {
      margin-right: 0.2em;
    }

    .rating-star {
      color: #fff;
    }

    .recipe-title {
      font-size: 1.1em;
      font-weight: bold;
      margin: 0.5em;
    }

    .recipe-info {
      display: flex;
      justify-content: space-between;
      align-items: center;
      padding: 0 1em 1em 1em;
    }

    .recipe-cuisine,
    .recipe-prep-time {
      font-size: 0.875em;
    }

    .recipe-link {
      position: absolute;
      top: 150px;
      right: 10px;
      width: 30px;
      height: 30px;
      font-size: 30px;
      color: #000;
      z-index: 999;
      mask-size: cover;
      background-size: cover;
      transition: background-color 0.3s;
    }

 

    /* Ensure this CSS is loaded after Bootstrap to override styles */
    .btn {
      border-radius: 50px;
    }

    .cuisines-title {
      text-align: center;
      font-size: 24px;
      margin-top: 20px;
      font-family: Arial, sans-serif;
    }

    .cuisines-list {
      list-style: none;
      padding: 0;
      display: flex;
      flex-wrap: wrap;
      justify-content: space-around;
      margin: 20px 0;
    }

    .cuisine-item {
      flex-basis: calc(33.33% - 40px); /* Adjust size and space between items */
      margin: 20px;
      box-shadow: 0px 4px 8px rgba(0,0,0,0.2);
      border-radius: 10px;
      overflow: hidden;
      position: relative;
    }

    .cuisine-image {
      width: 100%;
      height: 150px; /* Fixed height for uniformity */
      object-fit: cover; /* Ensures image covers the area without distortion */
    }

    .cuisine-link {
      display: block;
      text-align: center;
      background-color: rgba(0, 0, 0, 0.5);
      color: white;
      padding: 10px;
      font-size: 16px;
      position: absolute;
      bottom: 0;
      width: 100%;
      text-decoration: none;
    }

    .cuisine-link:hover {
      color: white;
      background-color: rgba(0, 0, 0, 0.7);
    }

    #profileBtn {
      display: inline-block;
      background-color: #ffc107; 
      margin-left: 20px;
      width: 40px; /* Width of the button */
      height: 40px; /* Height of the button */
      border-radius: 20px; /* Makes the button rounded */
      overflow: hidden; /* Ensures no overflow outside the button */
      cursor: pointer; /* Changes cursor to pointer to indicate it's clickable */
      border: none; /* No border for a cleaner look */
    }

    #profileBtn img {
      width: 100%; /* Ensures the icon fits the button */
      height: auto; /* Maintains aspect ratio of the icon */
      display: block; /* Removes any extra space inside the anchor */
    }
    .popup {
      display: none;
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background-color: rgba(0, 0, 0, 0.5); /* Semi-transparent background */
      z-index: 9999; /* Ensure the popup appears above other content */
    }
    
    .popup-content {
      background-color: #fefefe;
      margin: 10% auto;
      padding: 20px;
      border: 1px solid #888;
      width: 80%;
      max-width: 600px; /* Maximum width of the popup */
    }
    
    .close {
      color: #aaa;
      float: right;
      font-size: 28px;
      font-weight: bold;
    }
    
    .close:hover,
    .close:focus {
      color: black;
      text-decoration: none;
      cursor: pointer;
    }
    .recipe-image-container {
      position: relative;
      background-size: cover;
      background-position: center;
      width: 100%;
      height: 300px; /* Adjust height as needed */
    }
    
    .image-content {
      position: absolute;
      bottom: 20px;
      left: 80px;
      background-color:#d8d909;
      padding: 20px;
      width: 300px;
      border-radius: 10px;
    }
    
    .image-content h2 {
      font-size: 24px;
      font-weight: bold;
    }
    
    .image-content p {
      font-size: 16px;
      color: #333;
    }
    .content{
      background-color:#d8d909;
      padding: 20px;
      width: 400px;
      border-radius: 10px;
      margin-top: 20px  ;
    }
    .ingredients-flex{
      display: flex;
      flex-direction: column;
      justify-content: end;
      align-items: end;
      padding-right: 100px;
      
    }
    
    .ingredients{
  align-items: center;
      background: rgba( 255, 255, 255, 1 );
box-shadow: 0 8px 32px 0 rgba( 31, 38, 135, 0.37 );
backdrop-filter: blur( 20px );
-webkit-backdrop-filter: blur( 20px );
border-radius: 10px;
border: 1px solid rgba( 255, 255, 255, 0.18 );
width: 20%;
margin-right :150px;
    }
    .Preparation-flex{
      display: flex;
    
      justify-content: space-around;
      align-items: start;
      
    }
    .Preparation{
      align-items: center;

width: 20%;
margin-left :150px;
padding: 20px;
    }
   /* Messaging Container */
.messaging-container {
  display: flex;
  flex-direction: column;
  max-height: 200px; /* Adjust as needed */
  border: 1px solid #ddd;
  border-radius: 10px;
  overflow: hidden;
  margin-top: 50px;
}

/* Comments Container */
#comments-container {
  flex: 1;
  overflow-y: auto;
  padding: 10px;
}

/* Comment Bubble */
.comment {
  background-color: #f1f0f0;
  border-radius: 10px;
  padding: 10px;
  margin-bottom: 10px;
  max-width: 70%;
}

/* Align Right for Own Messages */
.comment.right {
  background-color: #d1f2eb;
  margin-left: auto;
}

/* Comment Text */
.comment p {
  margin: 0;
}

/* Comment Form */
#comment-form {
  display: flex;
  align-items: center;
  padding: 10px;
  border-top: 1px solid #ddd;
}

#comment-text {
  flex: 1;
  padding: 10px;
  border: 1px solid #ddd;
  border-radius: 20px;
  resize: none;
}

#comment-form button {
  background-color: #4caf50;
  color: white;
  border: none;
  border-radius: 50%;
  padding: 10px;
  cursor: pointer;
  margin-left: 10px;
}

#comment-form button:hover {
  background-color: #45a049;
}

  </style>
</head>
<body>
  <nav class="navbar navbar-expand-lg navbar-custom ">
    <div class="container">
      <a class="navbar-brand" href="#">CulturalCui</a>
      <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
        <span class="navbar-toggler-icon"></span>
      </button>
      <div class="collapse navbar-collapse" id="navbarNav">
        <ul class="navbar-nav ml-auto">
          <li class="nav-item active">
            <a class="nav-link" href="/dashboard">Home <span class="sr-only">(current)</span></a>
          </li>
          <li class="nav-item">
            <a class="nav-link" href="/recipes">Recipes</a>
          </li>
          <li class="nav-item">
            <a class="nav-link" href="#">Stories</a>
          </li>
        </ul>
       <a href="/register"><button class="btn btn-primary" >Join</button></a> 
       <a href="/login">  <button class="btn btn-outline-primary">Log in</button></a>
       <a href="profile/openprofile" id="profileBtn">
        <img src="https://cdn-icons-png.flaticon.com/512/3135/3135715.png" alt="Profile Icon">
      </a>
      </div>
    </div>
  </nav>

  <% if (recipe.image) { %>
    <div class="recipe-image-container" style="background-image: url('<%= '/' + recipe.image.replace(/\\/g, '/') %>')">
      <div class="image-content">
        <h2><%= recipe.title %></h2>
        <div><%= recipe.category.name %></div>
        <div class="stars">
          <span class="star">&#9733;</span>
          <span class="star">&#9733;</span>
          <span class="star">&#9733;</span>
          <span class="star">&#9733;</span>
        </div>
      </div>
    </div>
  <% } %>
  
  <center><div>
    <div class="content">
      <div><%= recipe.description %></div>
      </div>
  </div></center>

  <div class="ingredients-flex">
    <h2 style="font-size: 70px;font-weight:bolder">
      Ingredients
    </h2>
 <div class="ingredients">
  <ul>
    <% recipe.ingredients.forEach(ingredient => { %>
      <li><%= ingredient %></li>
    <% }) %>
  </ul>
 </div>
  </div>

  <div class="Preparation-flex">
    <div>
    <h2 style="font-size: 70px;font-weight:bolder">
      Preparation
    </h2>
    <h2 style="">Step 1</h2>

 <div class="Preparation">
  <%= recipe.instructions %>
 </div>
 <div>
  <p><strong>Preperation time:</strong> <%= recipe.preparationTime %></p>
  <p><strong>Serving Size :</strong> <%= recipe.servingSize %></p>

</div>
    </div>



<div class="comment-flex">
  <div class="messaging-container">
    <div id="comments-container">
      <!-- Comments will be dynamically added here -->
    </div>
    <form id="comment-form">
      <textarea id="comment-text" placeholder="Type a message..." required></textarea>
      <button type="submit">Send</button>
    </form>
  </div>
  
  </div>

 
       
    <!-- You can add more details as needed -->
  </div>

  <script>
    const recipeId = '<%= recipe._id %>';
  
    // Now you can use recipeId in your JavaScript code
    console.log('Recipe ID:', recipeId);
  
    // Get the JWT token from localStorage
    const token = localStorage.getItem('token');
  
    // Fetch comments for a recipe
    fetch(`${recipeId}/comments`, {
      method: 'GET',
      headers: {
        'Authorization': `Bearer ${token}`,
        'Content-Type': 'application/json'
      }
    })
    .then(response => response.json())
    .then(comments => {
      // Display comments on the recipe detail page
      comments.forEach(comment => {
        const commentElement = document.createElement('div');
        commentElement.innerHTML = `
          <p>Posted by: ${comment.createdBy.username}:${comment.text}</p> <!-- Use createdBy.username to display the username -->
        `;
        document.getElementById('comments-container').appendChild(commentElement);
      });
    })
    .catch(error => {
      console.error('Error fetching comments:', error);
    });
    
    // Submit a new comment
    document.getElementById('comment-form').addEventListener('submit', event => {
      event.preventDefault();
      const text = document.getElementById('comment-text').value;
      fetch(`${recipeId}/comments`, {
        method: 'POST',
        headers: {
          'Authorization': `Bearer ${token}`, // Include the JWT token in the Authorization header
          'Content-Type': 'application/json' // Specify the content type
        },
        body: JSON.stringify({ text })
      })
      .then(response => {
        if (response.ok) {
          window.location.reload();
          // Update comments dynamically or refresh the page
        } else {
          console.error('Failed to submit comment');
        }
      })
      .catch(error => {
        console.error('Error submitting comment:', error);
      });
    });
  </script>
  
</body>
</html>
